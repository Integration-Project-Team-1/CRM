#name: Test and Deploy
#
#on:
#  push:
#    branches:
#      - testDev
#      - dev
#      - main
#
#jobs:
#  build:
#    runs-on: development
#
#    steps:
#      - name: "Debug: Docker"
#        run: docker info
#
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: "Debug: System Info"
#        run: |
#          git status
#          whoami
#          groups
#          hostname
#          pwd
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: 11
#          distribution: 'adopt'
#
#      - name: "Debug: Docker Build"
#        run: |
#          docker build -t crm-app .
#          docker images
#        env:
#          DEV_HOST: ${{ secrets.DEV_HOST }}
#          RABBITMQ_USERNAME: ${{ secrets.RABBITMQ_USERNAME }}
#          RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
#          RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
#          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
#          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
#          CONSUMING_QUEUE: ${{ secrets.CONSUMING_QUEUE }}
#          EXCHANGE: ${{ secrets.EXCHANGE }}
#          LOGIN_URL: ${{ secrets.LOGIN_URL }}
#          QUEUE_NAME_HEARTBEAT: ${{ secrets.QUEUE_NAME_HEARTBEAT }}
#          ROUTINGKEY: ${{ secrets.ROUTINGKEY }}
#          ROUTINGKEY_BUSINESS: ${{ secrets.ROUTINGKEY_BUSINESS }}
#          ROUTINGKEY_CONSUMPTION: ${{ secrets.ROUTINGKEY_CONSUMPTION }}
#          ROUTINGKEY_USER: ${{ secrets.ROUTINGKEY_USER }}
#          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
#          SALESFORCE_SECURITY_TOKEN: ${{ secrets.SALESFORCE_SECURITY_TOKEN }}
#          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
#
#  deploy:
#    name: Deploy
#    runs-on: development
#
#    environment:
#      name: test
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Check Docker Compose Syntax
#        run: docker compose config
#
#      - name: Verify Docker and Docker Compose
#        run: |
#          docker --version &&
#          docker-compose --version
#
#      - name: Navigate to crm-app
#        run: |
#
#          cd src/main/java/crm
#
#      - name: Stop and Remove Existing Containers
#        run: |
#          docker-compose -p crm-java-app down
#
#      - name: Build Docker images
#        run: docker-compose -p crm-java-app build
#
#      - name: Deploy
#        run: |
#          docker-compose -p crm-java-app up -d
#
#      - name: Check Deployment
#        run: echo "Deployment successful"